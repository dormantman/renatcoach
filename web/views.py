import json
import traceback

from django.contrib.auth import authenticate, login, logout
from django.core import mail
from django.shortcuts import redirect, render
from django.template.loader import render_to_string
from django.views import View

from project.settings import DEFAULT_FROM_EMAIL, DEFAULT_TO_EMAIL
from web.utils import get_emails, get_tariffs, send_email

DATA = dict(
    meta=dict(
        title='Renat Coach | –ü—Ä–∏—Ö–æ–¥–∏ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É!',
        phone='+7 (912) 345-67-89',
        email='renat.coach@gmail.com',
        address_coords='[59.972366,30.301980]',
        address_city='–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
        address_location='–í—è–∑–µ–º—Å–∫–∏–π –ø–µ—Ä–µ—É–ª–æ–∫, 5-7',
        address_coach_city='–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
        address_coach_location='—É–ª–∏—Ü–∞ –ë–µ–ª–æ—Ä—É—Å—Å–∫–∞—è –¥–æ–º 6',

        meta_theme_color='#1790ff',
        meta_favicon='https://image.flaticon.com/icons/svg/2736/2736135.svg',
        meta_image='https://sun1-94.userapi.com/V6d4WDVKEb3PcVEaF-TPtzJfw7wU6-5JAnNAAQ/9FcFvvYuT08.jpg',
        meta_site_title='Renat Coach ¬∑ –ü—Ä–∏—Ö–æ–¥–∏ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É!',
        meta_site_description='–•–æ—á–µ—à—å –±—ã—Ç—å —Å–∏–ª—å–Ω–µ–µ –∏ –∞–∫—Ç–∏–≤–Ω–µ–µ? –ü—Ä–∏—Ö–æ–¥–∏ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É!'
    ),

    email_settings=dict(

    ),

    tariffs=[
        {
            'number': 1,
            'title': '–û–¥–Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –≤ –≥—Ä—É–ø–ø–µ',
            'short': '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –≤ –≥—Ä. ¬∑ 600 —Ä.',
            'warning': {
                'message': '<div class="price-warning">–ü–æ–ø—É–ª—è—Ä–Ω—ã–π –≤—ã–±–æ—Ä <span class="beauty-number">üëë</span></div>',
                'color': '#1771F1',
            },
            'price': '<span>600</span> —Ä—É–±–ª–µ–π',
            'image': 'https://image.flaticon.com/icons/svg/1530/1530833.svg',
            'button': '–î–æ–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è',
            'url': '#mail'
        },
        {
            'number': 2,
            'title': '–í–æ—Å–µ–º—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ –≥—Ä—É–ø–ø–µ',
            'short': '8 —Ç—Ä–µ–Ω. –≤ –≥—Ä. ¬∑ 3500 —Ä./–º–µ—Å',
            'price': '<span>3 500</span> —Ä—É–±–ª–µ–π/–º–µ—Å',
            'image': 'https://image.flaticon.com/icons/svg/599/599928.svg',
            'button': '–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å',
            'url': '#mail'
        },
        {
            'number': 3,
            'title': '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞',
            'short': '–ü–µ—Ä—Å–æ–Ω–∞–ª. —Ç—Ä. ¬∑ 2 000 —Ä.',
            'warning': {
                'message': '<div class="price-warning">–°–∫–∏–¥–∫–∞ <span class="beauty-number">15%</span></div>',
                'color': '#E20338',
            },
            'price': '<span>2 000</span> —Ä—É–±–ª–µ–π',
            'image': 'https://image.flaticon.com/icons/svg/2734/2734214.svg',
            'button': '–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å',
            'url': '#mail'
        },
        {
            'number': 4,
            'title': '–û–±—É—á–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤—É!',
            'short': '–û–±—É—á. –º–∞—Å—Ç. ¬∑ 15 000 —Ä.',
            'price': '<span>15 000</span> —Ä—É–±–ª–µ–π',
            'image': 'https://image.flaticon.com/icons/svg/744/744984.svg',
            'button': '–ù–∞—á–∞—Ç—å!',
            'url': '#mail'
        }
    ],
)


class IndexView(View):
    def get(self, request):
        return render(request, 'index.html', {
            'is_auth': request.user.is_authenticated,
            'tariffs': json.dumps(get_tariffs(), ensure_ascii=False),
            **DATA['meta']
        })


class MailView(View):
    def get(self, request):
        return redirect('/')

    def post(self, request):
        data = request.POST

        message = {
            'text': f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É!<br>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ<br> '
                    f'–∏–ª–∏ –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –ø–æ –Ω–æ–º–µ—Ä—É:<br>{DATA["meta"]["phone"]}',
            'name': None,
            'phone': None,
            'tariff': None,
            'have_params': False,
        }

        try:
            name = data['name']
            phone = data['phone']
            tariff_id = int(data['tariff'])
            tariffs = DATA['tariffs']

            message['name'] = name
            message['phone'] = phone
            message['have_params'] = True

            if name and phone and tariff_id in range(1, len(tariffs) + 1):
                tariff = [element for element in tariffs if element['number'] == tariff_id][0]
                message['tariff'] = tariff

                connection = mail.get_connection()
                connection.open()

                message_body = render_to_string('email.html', context={
                    'title': tariff['title'],
                    'price': tariff['price'],
                    'name': name,
                    'phone': phone
                })

                status = send_email(
                    f'–ó–∞—è–≤–∫–∞ –Ω–∞ –∑–∞–ø–∏—Å—å –æ—Ç ¬´{name}¬ª',
                    message_body,
                    from_email=DEFAULT_FROM_EMAIL,
                    to=[DEFAULT_TO_EMAIL, ],
                    connection=connection,
                    additional=message,
                )

                if status:
                    message['text'] = '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!'

                connection.close()

        except (BaseException, Exception):
            traceback.print_exc()

        return render(request, 'index.html', {
            'message': message,
            'tariffs': json.dumps(get_tariffs(), ensure_ascii=False),
            **DATA['meta']
        })


class EmailsView(View):
    def get(self, request):
        if not request.user.is_authenticated:
            return redirect('/login/')

        return render(request, 'emails.html', {
            'emails': json.dumps(get_emails(), ensure_ascii=False),
            **DATA['meta']
        })


class LoginView(View):
    def get(self, request):
        user = request.user

        return render(request, 'login.html', {
            'is_logout': user.is_authenticated,
            **DATA['meta']
        })

    def post(self, request):
        data = request.POST

        user = authenticate(request=request, username=data['login'], password=data['password'])

        if user:
            login(request, user)
            return redirect('/emails/')

        return render(request, 'login.html', {
            'is_logout': False,
            **DATA['meta']
        })


class LogoutView(View):
    def get(self, request):
        logout(request)
        return redirect('/login/')

    def post(self, request):
        logout(request)
        return redirect('/login/')
